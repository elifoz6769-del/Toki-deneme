name: Android CI (APK + optional AAB)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find and unzip Android project
        run: |
          sudo apt-get update -y && sudo apt-get install -y unzip
          ZIP=$(ls *.zip | head -n 1 || true)
          if [ -z "$ZIP" ]; then
            echo "No zip found at repo root. Please upload your Android project zip (e.g., TokiBecayisAndroid.zip)."
            exit 1
          fi
          echo "Found zip: $ZIP"
          mkdir srcdir
          unzip -q "$ZIP" -d srcdir
          # Try to locate gradlew
          ROOT=$(find srcdir -maxdepth 3 -type f -name "gradlew" -printf '%h\n' | head -n 1)
          if [ -z "$ROOT" ]; then
            echo "Could not locate gradlew in the unzipped content."
            ls -R srcdir || true
            exit 1
          fi
          echo "PROJECT_DIR=$ROOT" >> $GITHUB_ENV
          echo "Project dir: $ROOT"
          chmod +x "$ROOT/gradlew"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: ${{ env.PROJECT_DIR }}

      - name: Assemble Debug APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/apk/debug/*.apk

      # ---- Optional: Signed Release AAB (needs secrets) ----
      - name: Check keystore secret
        id: haskey
        run: |
          if [ -n "${{ secrets.KEYSTORE_B64 }}" ]; then
            echo "has=true" >> $GITHUB_OUTPUT
          else
            echo "has=false" >> $GITHUB_OUTPUT
          fi

      - name: Restore keystore (if provided)
        if: steps.haskey.outputs.has == 'true'
        run: echo "${{ secrets.KEYSTORE_B64 }}" | base64 -d > tokibecayis.keystore

      - name: Bundle Release AAB (signed)
        if: steps.haskey.outputs.has == 'true'
        working-directory: ${{ env.PROJECT_DIR }}
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/tokibecayis.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: ./gradlew bundleRelease

      - name: Upload Release AAB
        if: steps.haskey.outputs.has == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/bundle/release/*.aab
